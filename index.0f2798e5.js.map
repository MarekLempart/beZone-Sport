{"mappings":"AAkFAA,SAASC,iBAAiB,oBAAoB,WAC5C,IAIIC,EAJEC,EAAuBH,SAASI,eAAe,wBAC/CC,EAAmBL,SAASI,eAAe,oBAC3CE,EAASN,SAASI,eAAe,UACjCG,EAASP,SAASI,eAAe,UAEnCI,EAAgBC,OAAOC,YAGxBL,EAAcM,UAAUC,OAAO,UAE9BT,GAAwBE,GAAoBC,GAAUC,GACxDJ,EAAqBU,MAAMC,QAAU,OAEpCL,OAAMR,iBAAiB,UAAU,WAChCc,aAAab,GACZ,IAAKc,EAAaT,EAAOU,wBACpBC,EAAaZ,EAAOW,wBACpBE,EAAeV,OAAOW,YACtBC,EAAmBZ,OAAOC,YAG1BY,EAAkBD,EAAmBb,EAAgB,OAAS,KAG9De,EAAOpB,EAAqBqB,cAAc,OAE9CD,EAAKV,MAAMY,UADW,OAApBH,EACqB,iBAEA,eAIvBd,EAAca,GAAoB,EAAI,EAAIA,EAI1CZ,OAAOC,YAAc,KACrBM,EAAWU,IAAMP,GACjBD,EAAWS,OAAS,GAEpBxB,EAAqBU,MAAMC,QAAU,QACpCT,EAAgBM,UAAUiB,IAAI,YAE/BzB,EAAqBU,MAAMC,QAAU,OAGjCL,OAAOC,YAAc,KACvBL,EAAiBM,UAAUC,OAAO,WAKnCV,EAAa2B,YAAW,YAEvBb,EAAWU,KAAOP,GAClBD,EAAWS,QAAU,IAC6B,IAAlDtB,EAAiBM,UAAUmB,SAAS,aAEpC3B,EAAqBU,MAAMC,QAAU,O,GAEtC,I,IAICX,EAAeF,iBAAiB,SAAS,WACzCQ,OAAOC,YAAcD,OAAOW,YAE1BX,OAAGsB,SAAS,CACdL,IAAK,EACLM,SAAU,WAIZvB,OAAOsB,SAAS,CACdL,IAAK1B,SAASiC,KAAKC,aACnBF,SAAU,U,KAKhBG,QAAQC,MACN,8F","sources":["src/js/scrollBothWaysButton.js"],"sourcesContent":["// js/scrollToTopButton.js\n\n// document.addEventListener('DOMContentLoaded', function () {\n//   const scrollToTopButton = document.getElementById('scrollToTopButton');\n//   const scrollDownButton = document.getElementById('scrollDownButton');\n//   const footer = document.getElementById('footer');\n//   const header = document.getElementById('header');\n\n//   let lastScrollPosition = 0; // Pozycja ostatniego przewijania\n//   let scrollDirection = 'down'; // Domyślny kierunek\n//   let hideButtonTimeout;\n\n//   if (scrollToTopButton && scrollDownButton && header && footer) {\n//     scrollToTopButton.style.display = 'none'; // Ukryj przycisk na początku\n\n//     // Funkcja do ukrywania przycisku po 3 sekundach braku aktywności\n//     const startHideButtonTimeout = () => {\n//       clearTimeout(hideButtonTimeout);\n//       hideButtonTimeout = setTimeout(() => {\n//         scrollToTopButton.style.display = 'none';\n//       }, 3000); // Ukryj po 3 sekundach\n//     };\n\n//     window.addEventListener('scroll', () => {\n//       const footerRect = footer.getBoundingClientRect();\n//       const headerRect = header.getBoundingClientRect();\n//       const windowHeight = window.innerHeight;\n//       const currentScrollPosition = window.pageYOffset;\n\n//       // Określanie kierunku przewijania\n//       if (currentScrollPosition > lastScrollPosition) {\n//         scrollDirection = 'down'; // Przewijanie w dół\n//       } else {\n//         scrollDirection = 'up'; // Przewijanie w górę\n//       }\n//       lastScrollPosition = currentScrollPosition;\n\n//       // Sprawdzenie czy pokazujemy przycisk\n//       if (currentScrollPosition > 100 && footerRect.top > windowHeight) {\n//         scrollToTopButton.style.display = 'flex'; // Pokaż przycisk\n//         scrollDownButton.classList.add('hidden'); // Ukryj przycisk w sekcji hero\n//         startHideButtonTimeout(); // Zresetuj czas do ukrycia\n//       } else {\n//         scrollToTopButton.style.display = 'none'; // Ukryj przycisk\n//         scrollDownButton.classList.remove('hidden'); // Pokaż przycisk w sekcji hero\n//       }\n\n//       // Zmieniamy ikonę przycisku w zależności od kierunku\n//       const icon = scrollToTopButton.querySelector('svg');\n//       if (scrollDirection === 'up') {\n//         icon.style.transform = 'rotate(180deg)'; // Obróć ikonę do góry\n//       } else {\n//         icon.style.transform = 'rotate(0deg)'; // Obróć ikonę do dołu\n//       }\n//     });\n\n//     scrollToTopButton.addEventListener('click', () => {\n//       clearTimeout(hideButtonTimeout); // Zatrzymujemy licznik ukrycia przycisku\n\n//       if (scrollDirection === 'up') {\n//         // Przewiń do góry\n//         window.scrollTo({\n//           top: 0,\n//           behavior: 'smooth',\n//         });\n//       } else {\n//         // Przewiń do dołu\n//         window.scrollTo({\n//           top: document.body.scrollHeight,\n//           behavior: 'smooth',\n//         });\n//       }\n//     });\n//   } else {\n//     console.error(\n//       'Element #scrollToTopButton, #scrollDownButton, #header, or #footer not found in the DOM.'\n//     );\n//   }\n// });\n\n// js/scrollBothWaysButton.js\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const scrollBothWaysButton = document.getElementById('scrollBothWaysButton'); // Przycisk przewijania\n  const scrollDownButton = document.getElementById('scrollDownButton'); // Przycisk w sekcji hero\n  const header = document.getElementById('header'); // Header\n  const footer = document.getElementById('footer'); // Footer\n  let scrollTimeout;\n  let lastScrollTop = window.pageYOffset; // Zapamiętujemy pozycję przewinięcia\n\n  // Początkowa widoczność przycisku w sekcji hero\n  scrollDownButton.classList.remove('hidden');\n\n  if (scrollBothWaysButton && scrollDownButton && header && footer) {\n    scrollBothWaysButton.style.display = 'none'; // Początkowo ukryty przycisk scroll-both-ways\n\n    window.addEventListener('scroll', () => {\n      clearTimeout(scrollTimeout); // Resetowanie timera przy każdym skrolowaniu\n      const footerRect = footer.getBoundingClientRect();\n      const headerRect = header.getBoundingClientRect();\n      const windowHeight = window.innerHeight;\n      const currentScrollTop = window.pageYOffset;\n\n      // Określenie kierunku przewijania\n      const scrollDirection = currentScrollTop > lastScrollTop ? 'down' : 'up';\n\n      // Obracanie ikony w zależności od kierunku przewijania\n      const icon = scrollBothWaysButton.querySelector('svg');\n      if (scrollDirection === 'up') {\n        icon.style.transform = 'rotate(180deg)'; // Obróć ikonę do góry\n      } else {\n        icon.style.transform = 'rotate(0deg)'; // Obróć ikonę w dół\n      }\n\n      // Aktualizujemy pozycję przewinięcia\n      lastScrollTop = currentScrollTop <= 0 ? 0 : currentScrollTop;\n\n      // Jeśli przewiniemy więcej niż 100px i header jest poza ekranem\n      if (\n        window.pageYOffset > 100 &&\n        footerRect.top > windowHeight &&\n        headerRect.bottom < 0\n      ) {\n        scrollBothWaysButton.style.display = 'block'; // Pokaż przycisk scroll-both-ways\n        scrollDownButton.classList.add('hidden'); // Ukryj przycisk hero-scroll-down-button\n      } else {\n        scrollBothWaysButton.style.display = 'none'; // Ukryj przycisk scroll-both-ways\n\n        // Pokaż przycisk w sekcji hero, gdy jest w górnej części strony\n        if (window.pageYOffset < 100) {\n          scrollDownButton.classList.remove('hidden'); // Pokaż przycisk hero-scroll-down-button\n        }\n      }\n\n      // Ukryj przycisk po 3 sekundach bezczynności lub jeśli widać header/footer\n      scrollTimeout = setTimeout(() => {\n        if (\n          footerRect.top <= windowHeight || // Footer widoczny\n          headerRect.bottom >= 0 || // Header widoczny\n          scrollDownButton.classList.contains('hidden') === false // Hero-scroll button widoczny\n        ) {\n          scrollBothWaysButton.style.display = 'none'; // Ukryj scroll-both-ways button\n        }\n      }, 3000); // 3 sekundy bezczynności\n    });\n\n    // Przycisk przewija w górę lub w dół w zależności od pozycji\n    scrollBothWaysButton.addEventListener('click', () => {\n      if (window.pageYOffset > window.innerHeight) {\n        // Przewiń do góry, gdy użytkownik jest niżej na stronie\n        window.scrollTo({\n          top: 0,\n          behavior: 'smooth',\n        });\n      } else {\n        // Przewiń w dół, gdy użytkownik jest blisko góry strony\n        window.scrollTo({\n          top: document.body.scrollHeight,\n          behavior: 'smooth',\n        });\n      }\n    });\n  } else {\n    console.error(\n      'Element #scrollBothWaysButton, #scrollDownButton, #header, or #footer not found in the DOM.'\n    );\n  }\n});\n"],"names":["document","addEventListener","scrollTimeout","scrollBothWaysButton","getElementById","scrollDownButton","header","footer","lastScrollTop","window","pageYOffset","classList","remove","style","display","clearTimeout","footerRect","getBoundingClientRect","headerRect","windowHeight","innerHeight","currentScrollTop","scrollDirection","icon","querySelector","transform","top","bottom","add","setTimeout","contains","scrollTo","behavior","body","scrollHeight","console","error"],"version":3,"file":"index.0f2798e5.js.map"}