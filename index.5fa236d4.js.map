{"mappings":"AAEAA,SAASC,iBAAiB,oBAAoB,WAC5C,IAIIC,EAJEC,EAAuBH,SAASI,eAAe,wBAC/CC,EAAmBL,SAASI,eAAe,oBAC3CE,EAASN,SAASI,eAAe,UACjCG,EAASP,SAASI,eAAe,UAEnCI,EAAgBC,OAAOC,YACvBC,EAAkB,OAGnBN,EAAcO,UAAUC,OAAO,UAE9BV,GAAwBE,GAAoBC,GAAUC,GACxDJ,EAAqBW,MAAMC,QAAU,OAEpCN,OAAMR,iBAAiB,UAAU,WAChCe,aAAad,GACZ,IAAKe,EAAaV,EAAOW,wBACpBC,EAAab,EAAOY,wBACpBE,EAAeX,OAAOY,YACtBC,EAAmBb,OAAOC,YAG/BC,EAAiBW,EAAmBd,EAAgB,OAAS,KAG5D,IAAIe,EAAOpB,EAAqBqB,cAAc,OAE9CD,EAAKT,MAAMW,UADW,OAApBd,EACqB,iBAEA,eAIvBH,EAAcc,GAAoB,EAAI,EAAIA,EAI1Cb,OAAOC,YAAc,KACrBO,EAAWS,IAAMN,GACjBD,EAAWQ,OAAS,GAEpBxB,EAAqBW,MAAMC,QAAU,QACpCV,EAAgBO,UAAUgB,IAAI,YAE/BzB,EAAqBW,MAAMC,QAAU,OAGjCN,OAAOC,YAAc,KACvBL,EAAiBO,UAAUC,OAAO,WAKnCX,EAAa2B,YAAW,YAEvBZ,EAAWS,KAAON,GAClBD,EAAWQ,QAAU,IAC6B,IAAlDtB,EAAiBO,UAAUkB,SAAS,aAEpC3B,EAAqBW,MAAMC,QAAU,O,GAEtC,I,IAICZ,EAAeF,iBAAiB,SAAS,WACrB,OAApBU,EAEIF,OAACsB,SAAS,CACdL,IAAK,EACLM,SAAU,WAIZvB,OAAOsB,SAAS,CACdL,IAAK1B,SAASiC,KAAKC,aACnBF,SAAU,U,KAKhBG,QAAQC,MACN,8F","sources":["src/js/scrollBothWaysButton.js"],"sourcesContent":["// js/scrollBothWaysButton.js\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const scrollBothWaysButton = document.getElementById('scrollBothWaysButton'); // Przycisk przewijania\n  const scrollDownButton = document.getElementById('scrollDownButton'); // Przycisk w sekcji hero\n  const header = document.getElementById('header'); // Header\n  const footer = document.getElementById('footer'); // Footer\n  let scrollTimeout;\n  let lastScrollTop = window.pageYOffset; // Zapamiętujemy pozycję przewinięcia\n  let scrollDirection = 'down'; // Domyślny kierunek przewijania\n\n  // Początkowa widoczność przycisku w sekcji hero\n  scrollDownButton.classList.remove('hidden');\n\n  if (scrollBothWaysButton && scrollDownButton && header && footer) {\n    scrollBothWaysButton.style.display = 'none'; // Początkowo ukryty przycisk scroll-both-ways\n\n    window.addEventListener('scroll', () => {\n      clearTimeout(scrollTimeout); // Resetowanie timera przy każdym skrolowaniu\n      const footerRect = footer.getBoundingClientRect();\n      const headerRect = header.getBoundingClientRect();\n      const windowHeight = window.innerHeight;\n      const currentScrollTop = window.pageYOffset;\n\n      // Określenie kierunku przewijania\n      scrollDirection = currentScrollTop > lastScrollTop ? 'down' : 'up';\n\n      // Obracanie ikony w zależności od kierunku przewijania\n      const icon = scrollBothWaysButton.querySelector('svg');\n      if (scrollDirection === 'up') {\n        icon.style.transform = 'rotate(180deg)'; // Obróć ikonę do góry\n      } else {\n        icon.style.transform = 'rotate(0deg)'; // Obróć ikonę w dół\n      }\n\n      // Aktualizujemy pozycję przewinięcia\n      lastScrollTop = currentScrollTop <= 0 ? 0 : currentScrollTop;\n\n      // Jeśli przewiniemy więcej niż 100px i header jest poza ekranem\n      if (\n        window.pageYOffset > 100 &&\n        footerRect.top > windowHeight &&\n        headerRect.bottom < 0\n      ) {\n        scrollBothWaysButton.style.display = 'block'; // Pokaż przycisk scroll-both-ways\n        scrollDownButton.classList.add('hidden'); // Ukryj przycisk hero-scroll-down-button\n      } else {\n        scrollBothWaysButton.style.display = 'none'; // Ukryj przycisk scroll-both-ways\n\n        // Pokaż przycisk w sekcji hero, gdy jest w górnej części strony\n        if (window.pageYOffset < 100) {\n          scrollDownButton.classList.remove('hidden'); // Pokaż przycisk hero-scroll-down-button\n        }\n      }\n\n      // Ukryj przycisk po 3 sekundach bezczynności lub jeśli widać header/footer\n      scrollTimeout = setTimeout(() => {\n        if (\n          footerRect.top <= windowHeight || // Footer widoczny\n          headerRect.bottom >= 0 || // Header widoczny\n          scrollDownButton.classList.contains('hidden') === false // Hero-scroll button widoczny\n        ) {\n          scrollBothWaysButton.style.display = 'none'; // Ukryj scroll-both-ways button\n        }\n      }, 3000); // 3 sekundy bezczynności\n    });\n\n    // Przycisk przewija w górę lub w dół w zależności od pozycji\n    scrollBothWaysButton.addEventListener('click', () => {\n      if (scrollDirection === 'up') {\n        // Przewiń do góry, gdy użytkownik przewijał w górę\n        window.scrollTo({\n          top: 0,\n          behavior: 'smooth',\n        });\n      } else {\n        // Przewiń w dół, gdy użytkownik przewijał w dół\n        window.scrollTo({\n          top: document.body.scrollHeight,\n          behavior: 'smooth',\n        });\n      }\n    });\n  } else {\n    console.error(\n      'Element #scrollBothWaysButton, #scrollDownButton, #header, or #footer not found in the DOM.'\n    );\n  }\n});\n"],"names":["document","addEventListener","scrollTimeout","scrollBothWaysButton","getElementById","scrollDownButton","header","footer","lastScrollTop","window","pageYOffset","scrollDirection","classList","remove","style","display","clearTimeout","footerRect","getBoundingClientRect","headerRect","windowHeight","innerHeight","currentScrollTop","icon","querySelector","transform","top","bottom","add","setTimeout","contains","scrollTo","behavior","body","scrollHeight","console","error"],"version":3,"file":"index.5fa236d4.js.map"}